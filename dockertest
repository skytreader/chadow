# vim: set ft=sh:
set -e -u

check_dir(){
    if [ ! -d  $1 ]; then
        mkdir $1
        chmod a+w $1
    else
        echo "$1 exists. Are you sure chadow testing can use this? y/n"
        read can_use
        if [ "$can_use" != "y" ]; then
            exit 1
        fi
        if [ -d $1/.chadow-metadata ]; then
            rm $1/.chadow-metadata
        fi
    fi
}

mode="full"

# Turn off -u because we are doing its job for it.
set +u
if [ ! -z "$1" ]; then
    mode="$1"
fi
set -u

if [ "$mode" != "full" ] && [ "$mode" != "quick" ]; then
    echo "mode can only be either full or quick. Given: $mode"
    exit 1
fi

check_dir ~/mock-fs-1
check_dir ~/mock-fs-2

docker_image="skytreader/chadow"
if [ "$mode" == "quick" ]; then
    docker_image="chadow:quicktest"
fi

# Turn off error exit since we want this script to always clean-up after itself
# regarless of the result of the test.
set +e -x
docker run --mount type=bind,source="$(pwd)",target=/home/chadow/chadow \
           --mount type=bind,source="/home/$(whoami)/mock-fs-1",target=/media/chadow/mock-fs-1 \
           --mount type=bind,source="/home/$(whoami)/mock-fs-2",target=/media/chadow/mock-fs-2 \
           $docker_image
test_result=$?
set -e +x

rm_cmd="rm -r"

# Turn off -u because this is a special check for a TravisCI envvar.
set +u
if [ "$is_travis" == "1" ]; then
    rm_cmd="sudo rm -rf"
fi
set -u

$rm_cmd ~/mock-fs-1
$rm_cmd ~/mock-fs-2

set +e +u

exit $test_result
